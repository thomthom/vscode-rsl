{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Robot Scripting Language",
	"scopeName": "source.rsl",
	"patterns": [
		{
			"include": "#events"
		},
		{
			"include": "#commands"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#properties"
		},
		{
			"include": "#registers"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#messages"
		}
	],
	"repository": {
		"events": {
			"patterns": [
				{
					"name": "meta.section.event.rsl",
					"begin": "\\[",
					"end": "\\]",
					"patterns": [
						{
							"name": "entity.name.type.rsl",
							"match": "\\b(ATKD|ATXX|DLIM|DLOS|DPIK|DOLL|EAPP|HELP|INIT|MSGR|NEXT|POSI|RAPP|SEEP|SEEE|STEP|WALL)\\b"
						},
						{
							"name": "entity.name.section.rsl",
							"match": "\\b[A-Z_][A-Z0-9_]*\\b"
						}
					]
				}
			]
		},
		"properties": {
			"patterns": [
				{
					"name": "entity.name.function.rsl",
					"match": "\\b(ATPR|BHVR|DMLT)\\b"
				}
			]
		},
		"commands": {
			"patterns": [
				{
					"name": "entity.name.function.rsl",
					"match": "\\b(AAID|ATAK|CALL|ESCP|FRND|FLEE|FOLL|GOTO|HALT|IFBF|IFBT|IFEQ|IFFR|IFGT|IFHI|IFIN|IFLO|IFLT|IFNE|IFNF|IFNV|IFVA|IFVI|ISEQ|SHOT|SOS|TEST|TURN|VAL|VISI|WAIT)\\b"
				},
				{
					"name": "variable.parameter.rsl",
					"match": "\\b(HP|TICK|BOTPOS)\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.rsl",
					"match": "\\b(_ADD|_DIV|_MUL|_SET|_SUB|ALLY|BSET|CNAM|COPY|CPID|CPOS|GATR|GDIS|GPOS|GRPS|INVA|LSMG|LRIDNEAR|QBHV|SNMY)\\b"
				}
			]
		},
		"registers": {
			"patterns": [
				{
					"name": "variable.language.rsl",
					"match": "[&](id|ps|bh|ms|nr|bl)[0-9]"
				},
				{
					"name": "invalid.illegal.rsl",
					"match": "[&]\\w+"
				},
				{
					"name": "storage.type.var.rsl",
					"match": "[#](me|mp|le|ri|fw|bk|mb|dl|id|ie|ps|bh|ms|nr|bl)"
				},
				{
					"name": "invalid.illegal.rsl",
					"match": "[#]\\w+"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.other.rsl",
					"match": "\\b(TRUE|FALSE)\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.rsl",
					"match": "\\b\\d+\\b"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.semicolon.rsl",
					"match": ";.*$"
				}
			]
		},
		"messages": {
			"patterns": [
				{
					"name": "meta.log.statement.rsl",
					"begin": "\\bLOG\\b\\s+",
					"beginCaptures": {
						"0": {
							"name": "entity.name.function.rsl"
						}
					},
					"end": "$",
					"patterns": [
						{
							"name": "constant.language.log-keyword.rsl",
							"match": "\\b(TICK|BOTPOS|HP)\\b"
						},
						{
							"name": "string.unquoted.message.rsl",
							"match": "(?!TICK|BOTPOS|HP).+"
						}
					]
				},
				{
					"name": "meta.message.statement.lmsg.rsl",
					"begin": "\\bLMSG\\b\\s+",
					"beginCaptures": {
						"0": {
							"name": "entity.name.function.rsl"
						}
					},
					"end": "$",
					"patterns": [
						{
							"include": "#registers"
						},
						{
							"name": "string.unquoted.message.rsl",
							"match": "[^\\s].*$"
						}
					]
				},
				{
					"name": "meta.message.statement.smsg.rsl",
					"begin": "\\bSMSG\\b\\s+",
					"beginCaptures": {
						"0": {
							"name": "entity.name.function.rsl"
						}
					},
					"end": "$",
					"patterns": [
						{
							"include": "#registers"
						},
						{
							"name": "string.unquoted.message.rsl",
							"match": "[^\\s].*$"
						}
					]
				}
			]
		}
	}
}
